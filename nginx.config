server {
    server_name cartbutler.duckdns.org www.cartbutler.duckdns.org;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cartbutler.duckdns.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cartbutler.duckdns.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    listen 443;
    server_name cartbutler.duckdns.org www.cartbutler.duckdns.org;

    # SSL configuration (managed by Certbot)
#    ssl_certificate /etc/letsencrypt/live/cartbutler.duckdns.org/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/cartbutler.duckdns.org/privkey.pem;

    # SSL security settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Frontend
    location / {
        root /home/ec2-user/frontend;
        try_files $uri $uri/ /index.html;
    }

    # Backend API
    location /api/ {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}
server {
    if ($host = cartbutler.duckdns.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name cartbutler.duckdns.org www.cartbutler.duckdns.org;
    return 404; # managed by Certbot


}